{"ast":null,"code":"import { configureStore, createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { nanoid } from 'nanoid';\nconst initialState = [{\n  id: 'id-1',\n  name: 'Rosie Simpson',\n  number: '459-12-56'\n}, {\n  id: 'id-2',\n  name: 'Hermione Kline',\n  number: '443-89-12'\n}, {\n  id: 'id-3',\n  name: 'Eden Clements',\n  number: '645-17-79'\n}, {\n  id: 'id-4',\n  name: 'Annie Copeland',\n  number: '227-91-26'\n}];\n// {\n//         name: 'Alex',\n//         number:' 56-348748-38428',\n//         id: `id-` + nanoid(),   \n// }\nconst addContacts = createAction('addContacts');\nconst deleteContacts = createAction('deleteContacts');\nconst myReducer = createReducer(initialState, builder => {\n  builder.addCase(addContacts, (state, action) => {\n    return [...state, action.payload];\n  }).addCase(deleteContacts, (state, action) => {\n    return state.filter(contact => contact.id !== action.payload);\n  });\n});\nexport const store = configureStore({\n  reducer: {\n    contacts: myReducer\n  }\n  // reducer: {\n  //     contacts: [],\n  //     filter: \"\"\n  // }\n});","map":{"version":3,"names":["configureStore","createAction","createReducer","nanoid","initialState","id","name","number","addContacts","deleteContacts","myReducer","builder","addCase","state","action","payload","filter","contact","store","reducer","contacts"],"sources":["/Users/valentynadumbrava/Desktop/goit-react-hw-06-phonebook/src/store/store.js"],"sourcesContent":["import { configureStore, createAction, createReducer} from \"@reduxjs/toolkit\";\nimport { nanoid } from 'nanoid';\n\nconst initialState = [{ id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },]\n// {\n//         name: 'Alex',\n//         number:' 56-348748-38428',\n//         id: `id-` + nanoid(),   \n// }\nconst addContacts = createAction('addContacts');\nconst deleteContacts = createAction('deleteContacts');\nconst myReducer = createReducer(initialState, builder => {\n    builder\n        .addCase(addContacts, (state, action) => { return [...state, action.payload] })\n        .addCase(deleteContacts, (state, action) => { return state.filter(contact => contact.id !== action.payload) })\n});\nexport const store = configureStore({\n    reducer: {\n        contacts: myReducer,\n        \n    }\n    // reducer: {\n    //     contacts: [],\n    //     filter: \"\"\n    // }\n})"],"mappings":"AAAA,SAASA,cAAc,EAAEC,YAAY,EAAEC,aAAa,QAAO,kBAAkB;AAC7E,SAASC,MAAM,QAAQ,QAAQ;AAE/B,MAAMC,YAAY,GAAG,CAAC;EAAEC,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,eAAe;EAAEC,MAAM,EAAE;AAAY,CAAC,EAC5E;EAAEF,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,gBAAgB;EAAEC,MAAM,EAAE;AAAY,CAAC,EAC3D;EAAEF,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,eAAe;EAAEC,MAAM,EAAE;AAAY,CAAC,EAC1D;EAAEF,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,gBAAgB;EAAEC,MAAM,EAAE;AAAY,CAAC,CAAE;AACjE;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAGP,YAAY,CAAC,aAAa,CAAC;AAC/C,MAAMQ,cAAc,GAAGR,YAAY,CAAC,gBAAgB,CAAC;AACrD,MAAMS,SAAS,GAAGR,aAAa,CAACE,YAAY,EAAEO,OAAO,IAAI;EACrDA,OAAO,CACFC,OAAO,CAACJ,WAAW,EAAE,CAACK,KAAK,EAAEC,MAAM,KAAK;IAAE,OAAO,CAAC,GAAGD,KAAK,EAAEC,MAAM,CAACC,OAAO,CAAC;EAAC,CAAC,CAAC,CAC9EH,OAAO,CAACH,cAAc,EAAE,CAACI,KAAK,EAAEC,MAAM,KAAK;IAAE,OAAOD,KAAK,CAACG,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACZ,EAAE,KAAKS,MAAM,CAACC,OAAO,CAAC;EAAC,CAAC,CAAC;AACtH,CAAC,CAAC;AACF,OAAO,MAAMG,KAAK,GAAGlB,cAAc,CAAC;EAChCmB,OAAO,EAAE;IACLC,QAAQ,EAAEV;EAEd;EACA;EACA;EACA;EACA;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}