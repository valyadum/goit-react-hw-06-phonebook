{"ast":null,"code":"import { configureStore, createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { nanoid } from 'nanoid';\nconst initialState = [];\n// {\n//         name: 'Alex',\n//         number:' 56-348748-38428',\n//         id: `id-` + nanoid(),   \n// }\nconst addContacts = createAction('addContacts');\nconst myReducer = createReducer(initialState, builder => {\n  builder.addCase(addContacts, (state, action) => {\n    return [...state, action.payload];\n  });\n});\nexport const store = configureStore({\n  reducer: {\n    contacts: myReducer\n  }\n  // reducer: {\n  //     contacts: [],\n  //     filter: \"\"\n  // }\n});","map":{"version":3,"names":["configureStore","createAction","createReducer","nanoid","initialState","addContacts","myReducer","builder","addCase","state","action","payload","store","reducer","contacts"],"sources":["/Users/valentynadumbrava/Desktop/goit-react-hw-06-phonebook/src/store/store.js"],"sourcesContent":["import { configureStore, createAction, createReducer} from \"@reduxjs/toolkit\";\nimport { nanoid } from 'nanoid';\n\nconst initialState =[]\n// {\n//         name: 'Alex',\n//         number:' 56-348748-38428',\n//         id: `id-` + nanoid(),   \n// }\nconst addContacts = createAction('addContacts');\nconst myReducer = createReducer(initialState, builder => {\n    builder.addCase(addContacts, (state, action) => {return [...state, action.payload] })\n});\nexport const store = configureStore({\n    reducer: {\n        contacts: myReducer,\n        \n    }\n    // reducer: {\n    //     contacts: [],\n    //     filter: \"\"\n    // }\n})"],"mappings":"AAAA,SAASA,cAAc,EAAEC,YAAY,EAAEC,aAAa,QAAO,kBAAkB;AAC7E,SAASC,MAAM,QAAQ,QAAQ;AAE/B,MAAMC,YAAY,GAAE,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAGJ,YAAY,CAAC,aAAa,CAAC;AAC/C,MAAMK,SAAS,GAAGJ,aAAa,CAACE,YAAY,EAAEG,OAAO,IAAI;EACrDA,OAAO,CAACC,OAAO,CAACH,WAAW,EAAE,CAACI,KAAK,EAAEC,MAAM,KAAK;IAAC,OAAO,CAAC,GAAGD,KAAK,EAAEC,MAAM,CAACC,OAAO,CAAC;EAAC,CAAC,CAAC;AACzF,CAAC,CAAC;AACF,OAAO,MAAMC,KAAK,GAAGZ,cAAc,CAAC;EAChCa,OAAO,EAAE;IACLC,QAAQ,EAAER;EAEd;EACA;EACA;EACA;EACA;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}