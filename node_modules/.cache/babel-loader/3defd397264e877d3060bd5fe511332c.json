{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { nanoid } from 'nanoid';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst initialStateContacts = [{\n  id: 'id-1',\n  name: 'Rosie Simpson',\n  number: '459-12-56'\n}, {\n  id: 'id-2',\n  name: 'Hermione Kline',\n  number: '443-89-12'\n}, {\n  id: 'id-3',\n  name: 'Eden Clements',\n  number: '645-17-79'\n}, {\n  id: 'id-4',\n  name: 'Annie Copeland',\n  number: '227-91-26'\n}];\nconst persistConfig = {\n  key: 'ContactsLS',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, contactSlice);\nconst contactSlice = createSlice({\n  name: 'contacts',\n  initialState: initialStateContacts,\n  reducers: {\n    addContacts: {\n      reducer(state, action) {\n        state.push(action.payload);\n      },\n      prepare(name, number) {\n        return {\n          payload: {\n            name: name,\n            number: number,\n            id: nanoid()\n          }\n        };\n      }\n    },\n    deleteContacts(state, action) {\n      return state.filter(contact => contact.id !== action.payload);\n    }\n  }\n});\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    filterContacts(state, action) {\n      return action.payload;\n    }\n  }\n});\nexport const store = configureStore({\n  reducer: {\n    contacts: contactSlice.reducer,\n    filter: filterSlice.reducer\n  }\n});\nexport const {\n  addContacts,\n  deleteContacts\n} = contactSlice.actions;\nexport const {\n  filterContacts\n} = filterSlice.actions;","map":{"version":3,"names":["configureStore","createSlice","nanoid","persistStore","persistReducer","storage","initialStateContacts","id","name","number","persistConfig","key","persistedReducer","contactSlice","initialState","reducers","addContacts","reducer","state","action","push","payload","prepare","deleteContacts","filter","contact","filterSlice","filterContacts","store","contacts","actions"],"sources":["/Users/valentynadumbrava/Desktop/goit-react-hw-06-phonebook/src/store/store.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { nanoid } from 'nanoid';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst initialStateContacts = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n]\nconst persistConfig = {\n    key: 'ContactsLS',\n    storage,\n}\nconst persistedReducer = persistReducer(persistConfig, contactSlice)\n\nconst contactSlice = createSlice({\n    name: 'contacts',\n    initialState:initialStateContacts,\n    reducers: {\n        addContacts: {\n            reducer(state, action) { state.push(action.payload) },\n            prepare(name, number) {\n                return {\n                    payload: {\n                        name: name,\n                        number: number,\n                        id: nanoid(),\n                    },\n                };\n            },\n        },\n        deleteContacts(state, action) { return state.filter(contact => contact.id !== action.payload) }\n    }\n});\nconst filterSlice = createSlice({\n    name: 'filter',\n    initialState: '',\n    reducers: {\n        filterContacts(state, action){return action.payload}\n    }\n    \n})\nexport const store = configureStore({\n    reducer: {\n        contacts: contactSlice.reducer,\n        filter:filterSlice.reducer,\n\n    }\n\n})\nexport const { addContacts, deleteContacts } = contactSlice.actions;\nexport const { filterContacts } = filterSlice.actions"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAC9D,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,MAAMC,oBAAoB,GAAG,CACzB;EAAEC,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,eAAe;EAAEC,MAAM,EAAE;AAAY,CAAC,EAC1D;EAAEF,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,gBAAgB;EAAEC,MAAM,EAAE;AAAY,CAAC,EAC3D;EAAEF,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,eAAe;EAAEC,MAAM,EAAE;AAAY,CAAC,EAC1D;EAAEF,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,gBAAgB;EAAEC,MAAM,EAAE;AAAY,CAAC,CAC9D;AACD,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,YAAY;EACjBN;AACJ,CAAC;AACD,MAAMO,gBAAgB,GAAGR,cAAc,CAACM,aAAa,EAAEG,YAAY,CAAC;AAEpE,MAAMA,YAAY,GAAGZ,WAAW,CAAC;EAC7BO,IAAI,EAAE,UAAU;EAChBM,YAAY,EAACR,oBAAoB;EACjCS,QAAQ,EAAE;IACNC,WAAW,EAAE;MACTC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;QAAED,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAAC,CAAC;MACrDC,OAAOA,CAACd,IAAI,EAAEC,MAAM,EAAE;QAClB,OAAO;UACHY,OAAO,EAAE;YACLb,IAAI,EAAEA,IAAI;YACVC,MAAM,EAAEA,MAAM;YACdF,EAAE,EAAEL,MAAM,CAAC;UACf;QACJ,CAAC;MACL;IACJ,CAAC;IACDqB,cAAcA,CAACL,KAAK,EAAEC,MAAM,EAAE;MAAE,OAAOD,KAAK,CAACM,MAAM,CAACC,OAAO,IAAIA,OAAO,CAAClB,EAAE,KAAKY,MAAM,CAACE,OAAO,CAAC;IAAC;EAClG;AACJ,CAAC,CAAC;AACF,MAAMK,WAAW,GAAGzB,WAAW,CAAC;EAC5BO,IAAI,EAAE,QAAQ;EACdM,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNY,cAAcA,CAACT,KAAK,EAAEC,MAAM,EAAC;MAAC,OAAOA,MAAM,CAACE,OAAO;IAAA;EACvD;AAEJ,CAAC,CAAC;AACF,OAAO,MAAMO,KAAK,GAAG5B,cAAc,CAAC;EAChCiB,OAAO,EAAE;IACLY,QAAQ,EAAEhB,YAAY,CAACI,OAAO;IAC9BO,MAAM,EAACE,WAAW,CAACT;EAEvB;AAEJ,CAAC,CAAC;AACF,OAAO,MAAM;EAAED,WAAW;EAAEO;AAAe,CAAC,GAAGV,YAAY,CAACiB,OAAO;AACnE,OAAO,MAAM;EAAEH;AAAe,CAAC,GAAGD,WAAW,CAACI,OAAO"},"metadata":{},"sourceType":"module"}